
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALPHANUMERIC ALPHANUMERIC_COMPLEMENTED ANYCHAR BEL CARRIAGE_RET CHAR COMMA DIGIT DIGIT_COMPLEMENTED DOLLAR ESC ESCAPED F_FEED HAT HEXA LCPAR LPAR LSPAR L_FEED MINUS NUM OPT OR PLUS RCPAR RPAR RSPAR TAB TIMES WHITESPACE WHITESPACE_COMPLEMENTEDregex : alternative alternative \t: alternative OR concatenation  \n\t\t\t\t\t| alternative OR\n\t\t\t\t\t| concatenationconcatenation \t: concatenation repetition \n\t\t\t\t\t\t| repetitionrepetition \t: subexpr TIMES \n\t\t\t\t  \t| subexpr PLUS \n\t\t\t\t\t| subexpr OPT  \n\t\t\t\t\t| subexpr LCPAR NUM RCPAR\n\t\t\t\t\t| subexpr LCPAR COMMA NUM RCPAR\n\t\t\t\t\t| subexpr LCPAR NUM COMMA RCPAR\n\t\t\t\t\t| subexpr LCPAR NUM COMMA NUM RCPAR\n\t\t\t\t\t| subexpr subexpr \t: LPAR alternative RPAR \n\t\t\t\t| LSPAR HAT group RSPAR\n\t\t\t\t| LSPAR group RSPAR\n\t\t\t\t| terminal_sequence\n\t\t\t\t| metachar \n\t\t\t\t| ANYCHAR\n\t\t\t\t| DOLLAR\n\t\t\t\t| MINUS\n\t\t\t\t group \t:  terminal_sequence MINUS terminal_sequence group\n\t\t\t\t|  terminal_sequence MINUS terminal_sequence \n\t\t\t\t|  terminal_sequence group\n\t\t\t\t|  terminal_sequence\n\t\t\t\t|  metachar\t\t\t group\n\t\t\t\t|  metachar\t\t\t  terminal_sequence : CHAR\n\t\t\t\t\t\t  | NUM\n\t\t\t\t\t\t  | HEXA\n\t\t\t\t\t\t  | COMMA\n\t\t\t\t\t\t   metachar : WHITESPACE\n\t\t\t\t | WHITESPACE_COMPLEMENTED\n\t\t\t\t | DIGIT\n\t\t\t\t | DIGIT_COMPLEMENTED\n\t\t\t\t | ALPHANUMERIC\n\t\t\t\t | ALPHANUMERIC_COMPLEMENTED\n\t\t\t\t '
    
_lr_action_items = {'LPAR':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,34,37,39,43,46,49,50,52,],[8,8,-6,-14,-30,-32,8,-18,-19,-20,-21,-22,-29,-31,-33,-34,-35,-36,-37,-38,8,-5,-7,-8,-9,8,-15,-17,-10,-16,-12,-11,-13,]),'LSPAR':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,34,37,39,43,46,49,50,52,],[9,9,-6,-14,-30,-32,9,-18,-19,-20,-21,-22,-29,-31,-33,-34,-35,-36,-37,-38,9,-5,-7,-8,-9,9,-15,-17,-10,-16,-12,-11,-13,]),'ANYCHAR':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,34,37,39,43,46,49,50,52,],[12,12,-6,-14,-30,-32,12,-18,-19,-20,-21,-22,-29,-31,-33,-34,-35,-36,-37,-38,12,-5,-7,-8,-9,12,-15,-17,-10,-16,-12,-11,-13,]),'DOLLAR':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,34,37,39,43,46,49,50,52,],[13,13,-6,-14,-30,-32,13,-18,-19,-20,-21,-22,-29,-31,-33,-34,-35,-36,-37,-38,13,-5,-7,-8,-9,13,-15,-17,-10,-16,-12,-11,-13,]),'MINUS':([0,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,32,34,37,39,43,46,49,50,52,],[14,14,-6,-14,-30,-32,14,-18,-19,-20,-21,-22,-29,-31,-33,-34,-35,-36,-37,-38,14,-5,-7,-8,-9,40,14,-15,-17,-10,-16,-12,-11,-13,]),'CHAR':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,30,32,33,34,37,39,40,43,46,47,49,50,52,],[15,15,-6,-14,-30,-32,15,15,-18,-19,-20,-21,-22,-29,-31,-33,-34,-35,-36,-37,-38,15,-5,-7,-8,-9,15,15,15,15,-15,-17,15,-10,-16,15,-12,-11,-13,]),'NUM':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,32,33,34,36,37,39,40,43,44,46,47,49,50,52,],[6,6,-6,-14,-30,-32,6,6,-18,-19,-20,-21,-22,-29,-31,-33,-34,-35,-36,-37,-38,6,-5,-7,-8,-9,35,6,6,6,6,45,-15,-17,6,-10,48,-16,6,-12,-11,-13,]),'HEXA':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,30,32,33,34,37,39,40,43,46,47,49,50,52,],[16,16,-6,-14,-30,-32,16,16,-18,-19,-20,-21,-22,-29,-31,-33,-34,-35,-36,-37,-38,16,-5,-7,-8,-9,16,16,16,16,-15,-17,16,-10,-16,16,-12,-11,-13,]),'COMMA':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,32,33,34,35,37,39,40,43,46,47,49,50,52,],[7,7,-6,-14,-30,-32,7,7,-18,-19,-20,-21,-22,-29,-31,-33,-34,-35,-36,-37,-38,7,-5,-7,-8,-9,36,7,7,7,7,44,-15,-17,7,-10,-16,7,-12,-11,-13,]),'WHITESPACE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,30,32,33,34,37,39,43,46,47,49,50,52,],[17,17,-6,-14,-30,-32,17,17,-18,-19,-20,-21,-22,-29,-31,-33,-34,-35,-36,-37,-38,17,-5,-7,-8,-9,17,17,17,17,-15,-17,-10,-16,17,-12,-11,-13,]),'WHITESPACE_COMPLEMENTED':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,30,32,33,34,37,39,43,46,47,49,50,52,],[18,18,-6,-14,-30,-32,18,18,-18,-19,-20,-21,-22,-29,-31,-33,-34,-35,-36,-37,-38,18,-5,-7,-8,-9,18,18,18,18,-15,-17,-10,-16,18,-12,-11,-13,]),'DIGIT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,30,32,33,34,37,39,43,46,47,49,50,52,],[19,19,-6,-14,-30,-32,19,19,-18,-19,-20,-21,-22,-29,-31,-33,-34,-35,-36,-37,-38,19,-5,-7,-8,-9,19,19,19,19,-15,-17,-10,-16,19,-12,-11,-13,]),'DIGIT_COMPLEMENTED':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,30,32,33,34,37,39,43,46,47,49,50,52,],[20,20,-6,-14,-30,-32,20,20,-18,-19,-20,-21,-22,-29,-31,-33,-34,-35,-36,-37,-38,20,-5,-7,-8,-9,20,20,20,20,-15,-17,-10,-16,20,-12,-11,-13,]),'ALPHANUMERIC':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,30,32,33,34,37,39,43,46,47,49,50,52,],[21,21,-6,-14,-30,-32,21,21,-18,-19,-20,-21,-22,-29,-31,-33,-34,-35,-36,-37,-38,21,-5,-7,-8,-9,21,21,21,21,-15,-17,-10,-16,21,-12,-11,-13,]),'ALPHANUMERIC_COMPLEMENTED':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,30,32,33,34,37,39,43,46,47,49,50,52,],[22,22,-6,-14,-30,-32,22,22,-18,-19,-20,-21,-22,-29,-31,-33,-34,-35,-36,-37,-38,22,-5,-7,-8,-9,22,22,22,22,-15,-17,-10,-16,22,-12,-11,-13,]),'$end':([1,2,3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,34,37,39,43,46,49,50,52,],[0,-1,-4,-6,-14,-30,-32,-18,-19,-20,-21,-22,-29,-31,-33,-34,-35,-36,-37,-38,-3,-5,-7,-8,-9,-2,-15,-17,-10,-16,-12,-11,-13,]),'OR':([2,3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,34,37,39,43,46,49,50,52,],[23,-4,-6,-14,-30,-32,-18,-19,-20,-21,-22,-29,-31,-33,-34,-35,-36,-37,-38,-3,-5,-7,-8,-9,23,-2,-15,-17,-10,-16,-12,-11,-13,]),'RPAR':([3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,34,37,39,43,46,49,50,52,],[-4,-6,-14,-30,-32,-18,-19,-20,-21,-22,-29,-31,-33,-34,-35,-36,-37,-38,-3,-5,-7,-8,-9,37,-2,-15,-17,-10,-16,-12,-11,-13,]),'TIMES':([5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,22,37,39,46,],[25,-30,-32,-18,-19,-20,-21,-22,-29,-31,-33,-34,-35,-36,-37,-38,-15,-17,-16,]),'PLUS':([5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,22,37,39,46,],[26,-30,-32,-18,-19,-20,-21,-22,-29,-31,-33,-34,-35,-36,-37,-38,-15,-17,-16,]),'OPT':([5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,22,37,39,46,],[27,-30,-32,-18,-19,-20,-21,-22,-29,-31,-33,-34,-35,-36,-37,-38,-15,-17,-16,]),'LCPAR':([5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,22,37,39,46,],[28,-30,-32,-18,-19,-20,-21,-22,-29,-31,-33,-34,-35,-36,-37,-38,-15,-17,-16,]),'RSPAR':([6,7,15,16,17,18,19,20,21,22,31,32,33,38,41,42,47,51,],[-30,-32,-29,-31,-33,-34,-35,-36,-37,-38,39,-26,-28,46,-25,-27,-24,-23,]),'HAT':([9,],[30,]),'RCPAR':([35,44,45,48,],[43,49,50,52,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'regex':([0,],[1,]),'alternative':([0,8,],[2,29,]),'concatenation':([0,8,23,],[3,3,34,]),'repetition':([0,3,8,23,34,],[4,24,4,4,24,]),'subexpr':([0,3,8,23,34,],[5,5,5,5,5,]),'terminal_sequence':([0,3,8,9,23,30,32,33,34,40,47,],[10,10,10,32,10,32,32,32,10,47,32,]),'metachar':([0,3,8,9,23,30,32,33,34,47,],[11,11,11,33,11,33,33,33,11,33,]),'group':([9,30,32,33,47,],[31,38,41,42,51,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> regex","S'",1,None,None,None),
  ('regex -> alternative','regex',1,'p_regex','frontend_pythonre.py',12),
  ('alternative -> alternative OR concatenation','alternative',3,'p_alternative','frontend_pythonre.py',16),
  ('alternative -> alternative OR','alternative',2,'p_alternative','frontend_pythonre.py',17),
  ('alternative -> concatenation','alternative',1,'p_alternative','frontend_pythonre.py',18),
  ('concatenation -> concatenation repetition','concatenation',2,'p_concatenation','frontend_pythonre.py',42),
  ('concatenation -> repetition','concatenation',1,'p_concatenation','frontend_pythonre.py',43),
  ('repetition -> subexpr TIMES','repetition',2,'p_repetition','frontend_pythonre.py',64),
  ('repetition -> subexpr PLUS','repetition',2,'p_repetition','frontend_pythonre.py',65),
  ('repetition -> subexpr OPT','repetition',2,'p_repetition','frontend_pythonre.py',66),
  ('repetition -> subexpr LCPAR NUM RCPAR','repetition',4,'p_repetition','frontend_pythonre.py',67),
  ('repetition -> subexpr LCPAR COMMA NUM RCPAR','repetition',5,'p_repetition','frontend_pythonre.py',68),
  ('repetition -> subexpr LCPAR NUM COMMA RCPAR','repetition',5,'p_repetition','frontend_pythonre.py',69),
  ('repetition -> subexpr LCPAR NUM COMMA NUM RCPAR','repetition',6,'p_repetition','frontend_pythonre.py',70),
  ('repetition -> subexpr','repetition',1,'p_repetition','frontend_pythonre.py',71),
  ('subexpr -> LPAR alternative RPAR','subexpr',3,'p_subexpr','frontend_pythonre.py',106),
  ('subexpr -> LSPAR HAT group RSPAR','subexpr',4,'p_subexpr','frontend_pythonre.py',107),
  ('subexpr -> LSPAR group RSPAR','subexpr',3,'p_subexpr','frontend_pythonre.py',108),
  ('subexpr -> terminal_sequence','subexpr',1,'p_subexpr','frontend_pythonre.py',109),
  ('subexpr -> metachar','subexpr',1,'p_subexpr','frontend_pythonre.py',110),
  ('subexpr -> ANYCHAR','subexpr',1,'p_subexpr','frontend_pythonre.py',111),
  ('subexpr -> DOLLAR','subexpr',1,'p_subexpr','frontend_pythonre.py',112),
  ('subexpr -> MINUS','subexpr',1,'p_subexpr','frontend_pythonre.py',113),
  ('group -> terminal_sequence MINUS terminal_sequence group','group',4,'p_group','frontend_pythonre.py',171),
  ('group -> terminal_sequence MINUS terminal_sequence','group',3,'p_group','frontend_pythonre.py',172),
  ('group -> terminal_sequence group','group',2,'p_group','frontend_pythonre.py',173),
  ('group -> terminal_sequence','group',1,'p_group','frontend_pythonre.py',174),
  ('group -> metachar group','group',2,'p_group','frontend_pythonre.py',175),
  ('group -> metachar','group',1,'p_group','frontend_pythonre.py',176),
  ('terminal_sequence -> CHAR','terminal_sequence',1,'p_terminal_sequence','frontend_pythonre.py',210),
  ('terminal_sequence -> NUM','terminal_sequence',1,'p_terminal_sequence','frontend_pythonre.py',211),
  ('terminal_sequence -> HEXA','terminal_sequence',1,'p_terminal_sequence','frontend_pythonre.py',212),
  ('terminal_sequence -> COMMA','terminal_sequence',1,'p_terminal_sequence','frontend_pythonre.py',213),
  ('metachar -> WHITESPACE','metachar',1,'p_metachar','frontend_pythonre.py',223),
  ('metachar -> WHITESPACE_COMPLEMENTED','metachar',1,'p_metachar','frontend_pythonre.py',224),
  ('metachar -> DIGIT','metachar',1,'p_metachar','frontend_pythonre.py',225),
  ('metachar -> DIGIT_COMPLEMENTED','metachar',1,'p_metachar','frontend_pythonre.py',226),
  ('metachar -> ALPHANUMERIC','metachar',1,'p_metachar','frontend_pythonre.py',227),
  ('metachar -> ALPHANUMERIC_COMPLEMENTED','metachar',1,'p_metachar','frontend_pythonre.py',228),
]
